import os

""" –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Å—Ä–µ–¥—ã –¥–ª—è VDS """
activate_this = '/home/Mosgornasledie-bot/.venv/bin/activate_this.py'
with open(activate_this) as f:
	exec(f.read(), {'__file__': activate_this})


from dotenv import load_dotenv
from telebot import telebot
from telebot import types
import db

""" 
–ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–æ—Ç—É –ø–æ —Ç–æ–∫–µ–Ω—É,
—Ç–æ–∫–µ–Ω –±–µ—Ä–µ—Ç—Å—è –∏–∑ –æ–∫—Ä—É–∂–µ–Ω–∏—è
"""
load_dotenv()
API_TOKEN = os.getenv('API_TOKEN')
bot = telebot.TeleBot(API_TOKEN)
print("< STARTING A BOT >")


""" Inline –ö–ª–∞–≤–∏—Ç—É—Ä–∞ —Å–æ —Å–ø–∏—Å–∫–æ–º –ø—Ä–æ–µ–∫—Ç–æ–≤"""
def create_start_markup():
	markup = types.InlineKeyboardMarkup()
	for pr in db.get_all_projects():
		btn = types.InlineKeyboardButton(pr.name, callback_data=str(pr.id))
		markup.add(btn)
	return markup


""" –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ """
@bot.message_handler(commands=['start'])
def send_welcome(message):
	markup = create_start_markup()
	bot.send_message(message.chat.id, "–í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –î–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç –∫—É–ª—å—Ç—É—Ä–Ω–æ–≥–æ –Ω–∞—Å–ª–µ–¥–∏—è –≥–æ—Ä–æ–¥–∞ –ú–æ—Å–∫–≤—ã! –ó–¥–µ—Å—å –º—ã —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞–µ–º –æ —Ä–µ–∞–ª–∏–∑—É–µ–º—ã—Ö –Ω–∞–º–∏ –ø—Ä–æ–µ–∫—Ç–∞—Ö  –≤ —Å—Ñ–µ—Ä–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏ –ø–æ–ø—É–ª—è—Ä–∏–∑–∞—Ü–∏–∏ –æ–±—ä–µ–∫—Ç–æ–≤ –∫—É–ª—å—Ç—É—Ä–Ω–æ–≥–æ –Ω–∞—Å–ª–µ–¥–∏—è, —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–Ω—ã—Ö –Ω–∞ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏ –≥–æ—Ä–æ–¥–∞ –ú–æ—Å–∫–≤—ã. –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∏ —É–∑–Ω–∞–µ—Ç–µ –º–Ω–æ–≥–æ –Ω–æ–≤–æ–≥–æ –æ–± –∏—Å—Ç–æ—Ä–∏–∏ –∏ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–µ —Å—Ç–æ–ª–∏—Ü—ã!", reply_markup=markup)


""" –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–Ω—ã—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±–µ—â–Ω–∏–π """
@bot.message_handler(func=lambda message: True)
def send_message(message):
	bot.send_message(message.chat.id, "–Ø –Ω–µ –∑–Ω–∞—é –∫–∞–∫ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ —Ç–∞–∫–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ üòÖ")


""" Callback –¥–ª—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã, –æ—Ç–ø—Ä–∞–≤–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø—Ä–æ–µ–∫—Ç–µ """
@bot.callback_query_handler(func=lambda call: True)
def send_project_details(call):
	try:
		pr_id = call.data
		pr_data = db.get_project_by_id(pr_id)
		""" —Å—Å—ã–ª–∫–∏ –∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞ """
		links = list(db.get_project_links(pr_id))
		photos = list(db.get_project_photos(pr_id))
		""" –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞ –∏ –æ–ø–∏—Å–∞–Ω–∏—è """
		msg = f"*{pr_data.name}*\n"
		if pr_data.desc != "":
			msg += f"\n{pr_data.desc}\n\n"

		""" –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤–∞—Ä–∏–∞–Ω—Ç—ã –∫–æ–º–ø–∞–Ω–æ–≤–æ–∫ —Ñ–æ—Ç–æ """
		if len(photos) == 1:
			for link in links:
				if link.url[:5] != "https":
					msg += f"{link.name}: {link.url}\n"
				else:
					msg += f"[{link.name}]({link.url})\n"
			bot.send_message(call.message.chat.id, msg, parse_mode= 'Markdown')
			with open(photos[0].name, "rb") as photo:
				bot.send_photo(call.message.chat.id, photo, caption=photos[0].text, parse_mode= 'Markdown')

		else:
			bot.send_message(call.message.chat.id, msg, parse_mode= 'Markdown')
			link_idx = 0 # –∏–Ω–¥–µ–∫—Å –ø—Ä–∏–∫—Ä–µ–ø–ª—è–µ–º–æ–π –∫ —Ñ–æ—Ç–æ —Å—Å—ã–ª–∫–∏
			for i in range(len(photos)):
				with open(photos[i].name, "rb") as photo:
					photo_msg = photos[i].text+"\n"
					if photos[i].position == 1:
						if links[link_idx].url[:5] != "https":
							photo_msg += f"{links[link_idx].name}: {links[link_idx].url}\n"
						else:
							photo_msg += f"[{links[link_idx].name}]({links[link_idx].url})\n"
					else:
						link_idx -= 1
					link_idx += 1
					bot.send_photo(call.message.chat.id, photo, caption=photo_msg, parse_mode= 'Markdown')

	except Exception as e:
		print(e)


bot.polling(none_stop=True, interval=0)