from dotenv import load_dotenv
from telebot import telebot
from telebot import types
import db
import os

load_dotenv()
API_TOKEN = os.getenv('API_TOKEN')

bot = telebot.TeleBot(API_TOKEN)


def create_start_markup():
	markup = types.InlineKeyboardMarkup()
	for pr in db.get_all_projects():
		btn = types.InlineKeyboardButton(pr.name, callback_data=str(pr.id))
		markup.add(btn)
	return markup

# Handle '/start'
@bot.message_handler(commands=['start'])
def send_welcome(message):
	markup = create_start_markup()

	bot.send_message(message.chat.id, "–í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –î–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç –∫—É–ª—å—Ç—É—Ä–Ω–æ–≥–æ –Ω–∞—Å–ª–µ–¥–∏—è –≥–æ—Ä–æ–¥–∞ –ú–æ—Å–∫–≤—ã! –ó–¥–µ—Å—å –º—ã —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞–µ–º –æ —Ä–µ–∞–ª–∏–∑—É–µ–º—ã—Ö –Ω–∞–º–∏ –ø—Ä–æ–µ–∫—Ç–∞—Ö  –≤ —Å—Ñ–µ—Ä–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏ –ø–æ–ø—É–ª—è—Ä–∏–∑–∞—Ü–∏–∏ –æ–±—ä–µ–∫—Ç–æ–≤ –∫—É–ª—å—Ç—É—Ä–Ω–æ–≥–æ –Ω–∞—Å–ª–µ–¥–∏—è, —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–Ω—ã—Ö –Ω–∞ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏ –≥–æ—Ä–æ–¥–∞ –ú–æ—Å–∫–≤—ã. –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∏ —É–∑–Ω–∞–µ—Ç–µ –º–Ω–æ–≥–æ –Ω–æ–≤–æ–≥–æ –æ–± –∏—Å—Ç–æ—Ä–∏–∏ –∏ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–µ —Å—Ç–æ–ª–∏—Ü—ã!", reply_markup=markup)


# Handle all other messages with content_type 'text' (content_types defaults to ['text'])
@bot.message_handler(func=lambda message: True)
def send_message(message):
	bot.send_message(message.chat.id, "–Ø –Ω–µ –∑–Ω–∞—é –∫–∞–∫ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ —Ç–∞–∫–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ üòÖ")


# Handle inline kb callback with project id, send msg with project details
@bot.callback_query_handler(func=lambda call: True)
def send_project_details(call):
	try:
		pr_id = call.data
		pr_data = db.get_project_by_id(pr_id)
		msg = f"*{pr_data.name}*\n"
		if pr_data.desc != "":
			msg += f"\n{pr_data.desc}\n"
		pr_links = db.get_project_links(pr_id)
		if len(pr_links) != 0:
			msg += "\n"
			for link in pr_links:
				msg += f"[{link.name}]({link.url})\n"
		with open(pr_data.photo, "rb") as photo:
			bot.send_photo(call.message.chat.id, photo)
		bot.send_message(call.message.chat.id, msg, parse_mode= 'Markdown')
	except Exception as e:
		print(repr(e))


bot.polling(none_stop=True, interval=0)